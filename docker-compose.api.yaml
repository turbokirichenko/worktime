version: '3'
services:
  #api:
  #  image: postgrest/postgrest
  #  ports:
  #    - "3000:3000"
  #  environment:
  #    PGRST_DB_URI: ${PGRST_DB_URI}
  #  networks:
  #    localnet:
  #      ipv4_address: ${API_ADDRESS}
  db:
    build:
      context: .
      dockerfile: db.Dockerfile
      args:
        ssh_user: guest
        ssh_password: ${ROOT_PASS}
    ports:
      - "5433:5432"
      - "2288:22"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${POSTGRES_PGDATA}
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/initdb.d:/docker-entrypoint-initdb.d
      # - ./config/pg/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./config/pg/postgresql.conf:/etc/postgresql.conf
    networks:
      localnet:
        ipv4_address: ${DB_ADDRESS}
  db-ui:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
      - "5053:443"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PWD}
      PGADMIN_LISTEN_ADDRESS: '0.0.0.0'
      PGADMIN_ENABLE_TLS: true
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - ./db/pgadmin:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
      # HTTPS certificates mapping. NB! server.crt -> server.cert, server.key -> server.key
      - ./certs/pgadmin/https/server.crt:/certs/server.cert:ro
      - ./certs/pgadmin/https/server.key:/certs/server.key:ro
      # TLS superuser client certificates mapping
      - ./certs/clients/app_user.crt:/certs/app_user.crt:ro
      - ./certs/clients/app_user.key:/certs/app_user.key:ro
      # TLS worker
      - ./certs/clients/worker.crt:/certs/worker.crt:ro
      - ./certs/clients/worker.key:/certs/worker.key:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      localnet:
        ipv4_address: ${ADMIN_ADDRESS}

networks:
  localnet:
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET_NETWORK}
          gateway: ${GATEWAY_NETWORK}

    
